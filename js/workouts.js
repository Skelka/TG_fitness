import { getStorageItem, setStorageItem, showError, showNotification, formatTime } from './utils.js';
import { renderExercise, clearTimers } from './exercise-renderer.js';
import { programDataManager } from './program-data-manager.js';

const workoutsModule = {
    // –ó–∞–ø—É—Å–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    async startWorkout(programId, workoutId) {
        try {
            console.log('Starting workout with programId:', programId, 'workoutId:', workoutId);

            const workout = programDataManager.getWorkoutById(programId, workoutId);
            if (!workout) {
                throw new Error('–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
            console.log('Checking exercises:', workout.exercises);
            if (!workout.exercises || workout.exercises.length === 0) {
                throw new Error('–í —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ –Ω–µ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π');
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ
            window.currentWorkout = {
                ...workout,
                programId: programId
            };

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            window.currentExerciseIndex = 0;
            window.currentSet = 1;
            window.isResting = false;
            window.restTimeLeft = 0;
            window.workoutStartTime = Date.now();

            // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
            clearTimers();

            // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            document.querySelector('.bottom-nav')?.classList.add('hidden');

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
            this.initExitHandler();

            console.log('Starting workout with:', window.currentWorkout);

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
            renderExercise();

            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫
            window.tg.HapticFeedback.impactOccurred('medium');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:', error);
            showError(error.message);
            window.tg.HapticFeedback.notificationOccurred('error');
        }
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—ã—Ö–æ–¥–∞
    initExitHandler() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        window.tg.BackButton.show();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        window.tg.BackButton.onClick(() => {
            this.confirmQuitWorkout();
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        window.tg.onEvent('viewportChanged', ({ isStateStable }) => {
            if (!isStateStable) {
                this.confirmQuitWorkout();
            }
        });
    },

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    async confirmQuitWorkout() {
        const result = await window.tg.showConfirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?');
        if (result) {
            clearTimers();
            document.querySelector('.bottom-nav')?.classList.remove('hidden');
            window.tg.BackButton.hide();
            window.currentWorkout = null;
            window.currentExerciseIndex = 0;
            window.currentSet = 1;
        }
    },

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    async finishWorkout() {
        clearTimers();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const workoutDuration = Math.floor((Date.now() - window.workoutStartTime) / 60000); // –≤ –º–∏–Ω—É—Ç–∞—Ö
        const stats = {
            date: new Date().toISOString(),
            programId: window.currentWorkout.programId,
            workoutId: window.currentWorkout.id,
            duration: workoutDuration,
            exercises: window.currentWorkout.exercises.length,
            completed: true
        };

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const currentStats = await getStorageItem('workoutStats')
            .then(data => data ? JSON.parse(data) : { workouts: [] });
        
        currentStats.workouts = currentStats.workouts || [];
        currentStats.workouts.push(stats);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await setStorageItem('workoutStats', JSON.stringify(currentStats));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
        await window.tg.showPopup({
            title: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ',
            message: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formatTime(workoutDuration)}\n–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: ${window.currentWorkout.exercises.length}`,
            buttons: [{
                type: 'default',
                text: '–û—Ç–ª–∏—á–Ω–æ!'
            }]
        });

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
        document.querySelector('.bottom-nav')?.classList.remove('hidden');
        window.renderProgramCards();
    }
};

export default workoutsModule; 